<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>vue兄弟组件间传数据的方法-事件</title>
    <link href="/2020/07/20/hello-world/"/>
    <url>/2020/07/20/hello-world/</url>
    
    <content type="html"><![CDATA[<h2 id="vm-on-event-callback-vue-API"><a href="#vm-on-event-callback-vue-API" class="headerlink" title="vm.$on(event, callback)vue API"></a>vm.$on(event, callback)<a href="https://cn.vuejs.org/v2/api/#vm-on">vue API</a></h2><a id="more"></a><p><strong>用法：</strong> 监听当前实例上的自定义事件。事件可以由 <code>vm.$emit</code> 触发。回调函数会接收所有传入事件触发函数的额外参数。</p><pre><code class="hljs js">vm.$on(<span class="hljs-string">&#x27;test&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">msg</span>) </span>&#123;  <span class="hljs-built_in">console</span>.log(msg)&#125;)vm.$emit(<span class="hljs-string">&#x27;test&#x27;</span>, <span class="hljs-string">&#x27;hi&#x27;</span>)<span class="hljs-comment">// =&gt; &quot;hi&quot;</span></code></pre><h2 id="vm-once-event-callback-vue-API"><a href="#vm-once-event-callback-vue-API" class="headerlink" title="vm.$once(event, callback) vue API"></a>vm.$once(event, callback) <a href="https://cn.vuejs.org/v2/api/#vm-once">vue API</a></h2><p><strong>用法：</strong> 监听一个自定义事件，但是只触发一次。一旦触发之后，监听器就会被移除。</p><h2 id="vm-off-event-callback-vue-API"><a href="#vm-off-event-callback-vue-API" class="headerlink" title="vm.$off([event, callback] ) vue API"></a>vm.$off([event, callback] ) <a href="https://cn.vuejs.org/v2/api/#vm-off">vue API</a></h2><p><strong>用法：</strong></p><ul><li><p>移除自定义事件监听器。</p><ol><li><p>如果没有提供参数，则移除所有的事件监听器；</p></li><li><p>如果只提供了事件，则移除该事件所有的监听器；</p></li><li><p>如果同时提供了事件与回调，则只移除这个回调的监听器。</p></li></ol></li></ul><h2 id="vm-emit-eventName-…args-vue-API"><a href="#vm-emit-eventName-…args-vue-API" class="headerlink" title="vm.$emit(eventName, […args] ) vue API"></a>vm.$emit(eventName, […args] ) <a href="https://cn.vuejs.org/v2/api/#vm-emit">vue API</a></h2><p><strong>用法：</strong> 触发当前实例上的事件。附加参数都会传给监听器回调。<br>示例：只配合一个事件名使用 $emit：</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">welcome-button</span> <span class="hljs-attr">v-on:welcome</span>=<span class="hljs-string">&quot;sayHi&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">welcome-button</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>Vue.component(&#x27;welcome-button&#x27;, &#123;  template: `    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">v-on:click</span>=<span class="hljs-string">&quot;$emit(&#x27;welcome&#x27;)&quot;</span>&gt;</span>      Click me to be welcomed    <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>  `&#125;)new Vue(&#123;  el: &#x27;#emit-example-simple&#x27;,  methods: &#123;    sayHi: function () &#123;      alert(&#x27;Hi!&#x27;)    &#125;  &#125;&#125;)</code></pre><p>配合额外的参数使用 <code>$emit</code>：</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-comment">&lt;!-- 添加事件侦听器  --&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">magic-eight-ball</span> <span class="hljs-attr">v-on:give-advice</span>=<span class="hljs-string">&quot;showAdvice&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">magic-eight-ball</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>Vue.component(&#x27;magic-eight-ball&#x27;, &#123;  data: function () &#123;    return &#123;      possibleAdvice: [&#x27;Yes&#x27;, &#x27;No&#x27;, &#x27;Maybe&#x27;]    &#125;  &#125;,  methods: &#123;    giveAdvice: function () &#123;    //根据数组长度 随机取数      var randomAdviceIndex = Math.floor(Math.random() * this.possibleAdvice.length)      //触发示例事件  从数组中随机取一元素传参      this.$emit(&#x27;give-advice&#x27;, this.possibleAdvice[randomAdviceIndex])    &#125;  &#125;,  template: `    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">v-on:click</span>=<span class="hljs-string">&quot;giveAdvice&quot;</span>&gt;</span>      Click me for advice    <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>  `&#125;)new Vue(&#123;  el: &#x27;#emit-example-argument&#x27;,  methods: &#123;    showAdvice: function (advice) &#123;      alert(advice)    &#125;  &#125;&#125;)</code></pre><h2 id="兄弟组件传数据"><a href="#兄弟组件传数据" class="headerlink" title="兄弟组件传数据"></a>兄弟组件传数据</h2><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> &gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>兄弟组件数据交互<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&#x27;handle&#x27;</span>&gt;</span>销毁事件<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">aaa</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">aaa</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">bbb</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">bbb</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;js/vue.js&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"><span class="hljs-comment">// 提供事件中心</span></span><span class="javascript"><span class="hljs-keyword">var</span> hub=<span class="hljs-keyword">new</span> Vue();</span><span class="javascript"><span class="hljs-comment">// 组件  aaa</span></span><span class="javascript">Vue.component(<span class="hljs-string">&#x27;aaa&#x27;</span>,&#123;</span><span class="javascript">data:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;</span><span class="javascript"><span class="hljs-keyword">return</span>&#123;</span><span class="javascript">content:<span class="hljs-string">&#x27;这里是a&#x27;</span>,</span><span class="javascript">txt:<span class="hljs-string">&#x27;我是a被给到兄弟的数据~~~&#x27;</span>,</span><span class="javascript">test:<span class="hljs-string">&#x27;这里的数据会变化的！！！&#x27;</span></span>&#125;&#125;,<span class="handlebars"><span class="xml">template:&quot;<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\</span></span><span class="handlebars"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">content</span>&#125;&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\</span></span><span class="handlebars"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">test</span>&#125;&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\</span></span><span class="handlebars"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&#x27;changes&#x27;</span>&gt;</span>数据给b<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\</span></span><span class="handlebars"><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>&quot;,</span></span>methods:&#123;<span class="javascript">changes:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;</span><span class="javascript">hub.$emit(<span class="hljs-string">&#x27;aaaData&#x27;</span>,<span class="hljs-built_in">this</span>.txt);</span>&#125;&#125;,<span class="javascript">mounted:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;</span><span class="javascript">hub.$on(<span class="hljs-string">&#x27;bbbData&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">val</span>)=&gt;</span>&#123;</span><span class="javascript"><span class="hljs-built_in">this</span>.test=val;</span>&#125;);&#125;&#125;);<span class="javascript"><span class="hljs-comment">// 组件  bbb</span></span><span class="javascript">Vue.component(<span class="hljs-string">&#x27;bbb&#x27;</span>,&#123;</span><span class="javascript">data:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;</span><span class="javascript"><span class="hljs-keyword">return</span>&#123;</span><span class="javascript">content:<span class="hljs-string">&#x27;这里是b&#x27;</span>,</span><span class="javascript">txt:<span class="hljs-string">&#x27;我是b给到a兄弟下的数据&#x27;</span>,</span><span class="javascript">test:<span class="hljs-string">&#x27;这里的数据会变化的！！！&#x27;</span></span>&#125;&#125;,<span class="handlebars"><span class="xml">template:&quot;<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\</span></span><span class="handlebars"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">content</span>&#125;&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\</span></span><span class="handlebars"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">test</span>&#125;&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\</span></span><span class="handlebars"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&#x27;changes&#x27;</span>&gt;</span>数据给a<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\</span></span><span class="handlebars"><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>&quot;,</span></span>methods:&#123;changes()&#123;<span class="javascript">hub.$emit(<span class="hljs-string">&#x27;bbbData&#x27;</span>,<span class="hljs-built_in">this</span>.txt);</span>&#125;&#125;,mounted() &#123;<span class="javascript">hub.$on(<span class="hljs-string">&#x27;aaaData&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">val</span>)=&gt;</span>&#123;</span><span class="javascript"><span class="hljs-built_in">this</span>.test=val;</span>&#125;)&#125;&#125;)<span class="javascript"><span class="hljs-comment">// 实例化 Vue</span></span><span class="javascript"><span class="hljs-keyword">var</span> vm = <span class="hljs-keyword">new</span> Vue(&#123;</span><span class="javascript">el: <span class="hljs-string">&quot;#app&quot;</span>,</span>data: &#123;&#125;,methods: &#123;<span class="javascript"><span class="hljs-comment">//移除自定义事件监听器。</span></span>handle()&#123;<span class="javascript">hub.$off(<span class="hljs-string">&#x27;aaaData&#x27;</span>);</span><span class="javascript">hub.$off(<span class="hljs-string">&#x27;bbbData&#x27;</span>);</span>&#125;&#125;&#125;);<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre>]]></content>
    
    
    <categories>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
